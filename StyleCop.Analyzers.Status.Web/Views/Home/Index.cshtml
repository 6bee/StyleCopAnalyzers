@model MainViewModel
@{
    ViewBag.Title = "Home Page";
}

@helper GetDiagnosticColorClass(StyleCopDiagnostic diagnostic)
{
if (diagnostic.HasImplementation && diagnostic.Status != "DisabledNoTests")
{
        <text>success</text>
}
else if (diagnostic.HasImplementation)
{
        <text>warning</text>
}
else
{
        <text>danger</text>
}
}
@helper True()
{
    <i class="fa fa-check" style="color: green;"></i>
}
@helper False()
{
    <i class="fa fa-times" style="color: red;"></i>
}
@helper Undecided()
{
    <i class="fa fa-exclamation"></i>
}

<h2>This page is reporting the current status of <a href="https://github.com/DotNetAnalyzers/StyleCopAnalyzers">StyleCopAnalyzers</a></h2>

<div class="table-responsive">
    <table id="no-more-tables" class="table table-hover table-condensed">
        <thead>
            <tr>
                <td>
                    Category
                </td>
                <td>
                    ID
                </td>
                <td>
                    Title
                </td>
                <td>
                    Has Implementation
                </td>
                <td>
                    Status
                </td>
                <td style="overflow: visible; width: 0;">
                    Code Fix
                </td>
                <td></td>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Diagnostics)
            {
                <tr class="@GetDiagnosticColorClass(item)">
                    <td title="@item.Category" data-title="Category">@Html.ActionLink(item.Category.Replace("StyleCop.CSharp.", string.Empty), "Index", new { category = item.Category })</td>
                    <td><a href="@item.HelpLink" data-title="ID">@item.Id</a></td>
                    <td data-title="Title">@item.Title</td>
                    <td data-title="Has Implementation">
                        <a href="@Url.Action("Index", new { hasImplementation = item.HasImplementation })">
                            @if (item.HasImplementation)
                            {
                                @True()
                            }
                            else
                            {
                                @False()
                            }
                        </a>
                    </td>
                    <td data-title="Has Title">
                        <a href="@Url.Action("Index", new { status = item.Status })">
                                @item.Status
                        </a>
                    </td>
                    @switch (item.CodeFixStatus)
                    {
                        case CodeFixStatus.Implemented:
                            <td data-title="Code Fix">
                                <a href="@Url.Action("Index", new { codeFixStatus = item.CodeFixStatus })">@True()</a>
                            </td>
                            break;
                        case CodeFixStatus.NotImplemented:
                            <td title="@item.NoCodeFixReason" data-title="Code Fix">
                                <a href="@Url.Action("Index", new { codeFixStatus = item.CodeFixStatus })">@Undecided()</a>
                                <span class="visible-xs-inline" style="padding-left: 5px;">@item.NoCodeFixReason</span>
                            </td>
                            break;
                        case CodeFixStatus.NotYetImplemented:
                            <td data-title="Code Fix">
                                <a href="@Url.Action("Index", new { codeFixStatus = item.CodeFixStatus })">@False()</a>
                            </td>
                            break;
                        default:
                            break;
                    }
                </tr>
            }
        </tbody>
    </table>

    <h3>Commit information</h3>
    <table>
        <tr>
            <td>Sha1</td>
            <td><a href="https://github.com/DotNetAnalyzers/StyleCopAnalyzers/tree/@Model.Git.Sha">@Model.Git.Sha</a></td>
        </tr>
        <tr>
            <td>Message</td>
            <td>@Model.Git.Message</td>
        </tr>
        <tr>
            <td>Author</td>
            <td>@Model.Git.Author</td>
        </tr>
        <tr>
            <td>Committer</td>
            <td>@Model.Git.Committer</td>
        </tr>
        <tr>
            <td>Parents</td>
            <td>@string.Join(", ", Model.Git.Parents)</td>
        </tr>
    </table>
</div>